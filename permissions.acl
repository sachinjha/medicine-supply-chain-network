rule ManufactuererAddBatch {
	description: "Allow Persons to create ManufacturingBatch"
  	participant(m): "org.acme.medicine.supply_chain_network.Manufacturer"
  	operation: CREATE
  	resource(o): "org.acme.medicine.supply_chain_network.ManufacturingBatch"
	condition: (m.getIdentifier() == o.manufacturer.getIdentifier())
  	action: ALLOW
}

rule ManufactuererAddMedicineUnit {
	description: "Allow Manufactuer to add medicineUnit under  ManufacturingBatch owned by it"
  	participant(m): "org.acme.medicine.supply_chain_network.Manufacturer"
  	operation: CREATE
  	resource(o): "org.acme.medicine.supply_chain_network.MedicineUnit"
	transaction(tx): "org.acme.medicine.supply_chain_network.AddMedicineUnitRecord"
	condition: (m.getIdentifier() == o.batch.manufacturer.getIdentifier())
  	action: ALLOW
}


rule DistributorCreatePurchaseOrder {
	description: "Allow Distributor to createPurchaseOrder"
  	participant(m): "org.acme.medicine.supply_chain_network.Distributor"
  	operation: CREATE,READ
  	resource(o): "org.acme.medicine.supply_chain_network.PurchaseOrder"
	transaction(tx): "org.acme.medicine.supply_chain_network.CreatePurchaseOrder"
	condition: (o.cretedFor.getIdentifier() != o.createdBy.getIdentifier())
  	action: ALLOW
}

rule RetailerCreatePurchaseOrder {
	description: "Allow Retailer to createPurchaseOrder"
  	participant(m): "org.acme.medicine.supply_chain_network.Retailer"
  	operation: CREATE,READ
  	resource(o): "org.acme.medicine.supply_chain_network.PurchaseOrder"
	transaction(tx): "org.acme.medicine.supply_chain_network.CreatePurchaseOrder"
	condition: (o.cretedFor.getIdentifier() != o.createdBy.getIdentifier())
  	action: ALLOW
}

rule DistributororManufacturerUpdatePurchaseOrder{
	description: "Allow Manufactuer or distributor to update purchaseOrder assigned to them"
  	participant(m): "ANY"
  	operation: CREATE
  	resource(o): "org.acme.medicine.supply_chain_network.PurchaseOrder"
	transaction(tx): "org.acme.medicine.supply_chain_network.AcceptOrder"
	condition: (m.getIdentifier() == o.createdFor.getIdentifier())
  	action: ALLOW
}

rule DistributorOrManufacturerAcceptOrder{
	description: "Allow Manufactuer or distributor to accept purchaseOrder assigned to them"
  	participant(m): "ANY"
  	operation: CREATE,READ
  	resource(o): "org.acme.medicine.supply_chain_network.SalesOrder"
	transaction(tx): "org.acme.medicine.supply_chain_network.AcceptOrder"
	condition: (m.getIdentifier() == o.purchaseOrder.createdFor.getIdentifier())
  	action: ALLOW
}

rule DistributorOrManufacturerCreateShippingRequest{
	description: "Allow Manufactuer or distributor to create ShippingRequest related to SalesOrder created by It"
  	participant(m): "ANY"
  	operation: CREATE
  	resource(o): "org.acme.medicine.supply_chain_network.ShippingRequest"
	transaction(tx): "org.acme.medicine.supply_chain_network.CreateShippingRequest"
	condition: (m.getIdentifier() == o.salesOrder.createdBy.getIdentifier())
  	action: ALLOW
}

rule ReadShippingRequest{
	description: "Allow creater or Assignee to read shipping request"
  	participant(m): "ANY"
  	operation: READ
  	resource(o): "org.acme.medicine.supply_chain_network.ShippingRequest"
	transaction(tx): "org.acme.medicine.supply_chain_network.CreateShippingRequest"
	condition: (( m.getIdentifier() == o.logistics.getIdentifier() )|| (m.getIdentifier() == o.from.getIdentifier()  ))
  	action: ALLOW
}

rule DistributorOrManufacturerCreateShippingContainer{
	description: "Allow Manufactuer or distributor to create ShippingContainer related to ShippingRequest created by It"
  	participant(m): "ANY"
  	operation: CREATE
  	resource(o): "org.acme.medicine.supply_chain_network.ShippingContainer"
	transaction(tx): "org.acme.medicine.supply_chain_network.CreateShippingRequest"
	condition: (m.getIdentifier() == o.request.from.getIdentifier())
  	action: ALLOW
}




rule LogisticsAcceptShippingRequest{
	description: "Allow Manufactuer to add medicineUnit under  ManufacturingBatch owned by it"
  	participant(m): "org.acme.medicine.supply_chain_network.LogisticsProvider"
  	operation: UPDATE
  	resource(o): "org.acme.medicine.supply_chain_network.ShippingRequest"
	transaction(tx): "org.acme.medicine.supply_chain_network.AcceptShippingRequest"
	condition: (m.getIdentifier() == o.logistics.getIdentifier())
  	action: ALLOW
}


rule ReadUpdateShippingContainer{
	description: "Allow Onwer of shipping container to update it"
  	participant(m): "ANY"
  	operation: UPDATE,READ
  	resource(o): "org.acme.medicine.supply_chain_network.ShippingContainer"
	condition: (m.getIdentifier() == o.owner.getIdentifier())
  	action: ALLOW
}

rule ReadUpdateMedicineUnit {
	description: "Allow Onwer of MedicineUnit to update "
  	participant(m): "ANY"
  	operation: UPDATE,READ
  	resource(o): "org.acme.medicine.supply_chain_network.MedicineUnit"
	condition: (m.getIdentifier() == o.owner.getIdentifier())
  	action: ALLOW
}



rule RegulatorAdminUser {
 	description: "Let the regulator read anything"
  	participant: "org.acme.medicine.supply_chain_network.Regulator"
  	operation: READ
    resource: "**"
  	action: ALLOW
}

rule ParticipantsSeeSelves {
  	description: "Let participants see themselves"
  	participant(p): "org.hyperledger.composer.system.Participant"
  	operation: ALL
    resource(r): "org.hyperledger.composer.system.Participant"
  	condition: (r.getIdentifier() == p.getIdentifier())
  	action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule System {
    description: "Grant all full access to system resources"
    participant: "org.**"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}